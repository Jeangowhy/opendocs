#! /usr/bin/env bash

print_title () {
    printf '\n%.0s' {1..2};
    printf '=%.0s' {1..51};
    printf "\n/. 🚀 $1\n"
    printf '=%.0s' {1..51};
    printf '\n%.0s' {1..2};
}

function filter {
    local parent=`echo $1 | sed -n 's/[^/\]\+$//p'`
    echo $1
    for it in `sed -n "/^.. toctree::/,/^\S/{ s/^ \+\w/\0/p }" $1`
    do
        doc="$parent$it"
        filter $doc
    done
}

function toc() {
    echo ./README.rst
    echo ./Doc/README.rst
    filter ./Doc/contents.rst
}

function doc(){
    cat << EOF
文档合并脚本中使用了 sed 流式编辑器、awk 结构化数据编辑器，使用教程参考 OpenDocs： 

1. [Sed in 5 Minutes](https://github.com/Jeangowhy/opendocs/blob/main/sed.info)
2. [AWK in 5 Minutes](https://github.com/Jeangowhy/opendocs/blob/main/sed.info)

EOF
}

function combine() {
    print_title "Docs combine script"
    doc
    echo '.. code-block:: bash'

    echo ''
    cat $0 | sed -n 's/^/    /p'

    echo ''
    echo "Docs Count [library included]: `find ./ -name "*.rst" | wc -l` ::"
    echo ''
    find ./ -name "*.rst" | sed -n 's/.*/    \0/p' | grep -v library

    while read -r it
    do 
        # echo $it
        print_title "$it"
        cat $it
    done << EOF
`toc`
EOF
}


function include(){
    while read -r it
    do 
        # echo $it
        print_title "$it"
        printf ".. code-block:: \n\n"
        cat $it | sed -n 's/.*/    \0/p'
    done << EOF
./Grammar/python.gram
Doc/includes/newtypes/custom.c
Doc/includes/newtypes/pyproject.toml
Doc/includes/newtypes/custom2.c
Doc/includes/newtypes/custom3.c
Doc/includes/newtypes/custom4.c
Doc/includes/newtypes/sublist.c
Doc/includes/typestruct.h
Doc/includes/run-func.c
Doc/includes/typestruct.h
EOF
}

out=/c/opendocs/pydocs312.rst
combine > $out
include >> $out
subl $out
